[general]

# path for save operations
default-save-path=~/Mail

# Which provider to use for crypto ops
# Default: auto
pgp-provider=internal

# allow files to have different permissions than `0600`
# Default: false
unsafe-accounts-conf=false

# Output log messages to specified file.
# NOTE: When using shell redirection, this setting is ignored and use stdout.
#log-file=

# Only log messages above the specified level to log-file.
# Supported: trace, debug, info, warn and error. 
# NOTE: When using shell redirection, this is set to `trace`
# Default: info
log-level=info

# Set the $TERM environment variable used for the embedded terminal.
# Default: xterm-256color
term=xterm-256color

# Display OSC8 strings in the embedded terminal
# Default: false
enable-osc8=true

[ui]
border-char-vertical="|"
border-char-horizontal="─"
styleset-name=tokyo-night

# A comma separated list of column names with an optional align and width suffix. #
# Default: date<20,name<17,flags>4,subject<*
index-columns=date>16,name<20,subject<*

# Each name in index-columns must have a corresponding column-$name setting.
# All column-$name settings accept golang text/template syntax. See
# aerc-templates(7) for available template attributes and functions.
# Default settings
#column-date={{.DateAutoFormat .Date.Local}}
#column-name={{index (.From | names) 0}}
#column-flags={{.Flags | join ""}}
#column-subject={{.ThreadPrefix}}{{.Subject}}
column-date={{.DateAutoFormat .Date.Local}}
column-name={{index (.From | names) 0}}
column-subject={{.ThreadPrefix}}{{.Subject}}

# String separator inserted between columns. 
# Default: "  "
column-separator="  "

# See time.Time#Format at https://godoc.org/time#Time.Format
# Default: 2006-01-02 03:04 PM (ISO 8601 + 12 hour time)
timestamp-format=06/01/02 15:04

# Index-only time format for messages that were received/sent today.
# If this is not specified, timestamp-format is used instead.
#this-day-time-format=

# Index-only time format for messages that were received/sent within the last
# 7 days. If this is not specified, timestamp-format is used instead.
#this-week-time-format=

# Index-only time format for messages that were received/sent this year.
# If this is not specified, timestamp-format is used instead.
#this-year-time-format=

# Width of the sidebar, including the border.
# Default: 20
sidebar-width=25

# Message to display when viewing an empty folder.
# Default: (no messages)
empty-message=[empty]

# Message to display when no folders exists or are all filtered
# Default: (no folders)
empty-dirlist=[empty]

# Enable mouse events in the ui, e.g. clicking and scrolling with the mousewheel
# Default: false
mouse-enabled=true

# Ring the bell when new messages are received
# Default: true
new-message-bell=true

# Template to use for Account tab titles
# Default: {{.Account}}
tab-title-account={{.Account}}

# Marker to show before a pinned tab's name.
# Default: `
pinned-tab-marker='📌'

# Template for the left side of the directory list.
# Default: {{.Folder}}
dirlist-left={{.Folder}}

# Template for the right side of the directory list.
# Default: {{if .Unread}}{{humanReadable .Unread}}/{{end}}{{if .Exists}}{{humanReadable .Exists}}{{end}}
dirlist-right={{if .Unread}}{{humanReadable .Unread}}/{{end}}{{if .Exists}}{{humanReadable .Exists}}{{end}}

# Delay after which the messages are actually listed when entering a directory.
# Default: 200ms
dirlist-delay=200ms

# Display the directory list as a foldable tree that allows to collapse and
# expand the folders.
# Default: false
dirlist-tree=true

# Set level at which folders are collapsed by default. Set to 0 to disable.
# Default: 0
dirlist-collapse=0

# Moves to next message when the current message is deleted
# Default: true
next-message-on-delete=true

# Automatically set the "seen" flag when a message is opened in the message viewer.
# Default: true
auto-mark-read=true

# Activates fuzzy search in commands and their arguments.
# Default: false
fuzzy-complete=true

# How long to wait after the last input before auto-completion is triggered.
# Default: 250ms
completion-delay=250ms

# Minimum required chars to allow auto-completion to be triggered after completion-delay.
# Default: 1
completion-min-chars=1

# Global switch for completion popovers
# Default: true
completion-popovers=true

# Uncomment to use UTF-8 symbols to indicate PGP status of messages
# Default: ASCII
icon-unencrypted=🔓
icon-encrypted=🔒
icon-signed=🔑
icon-signed-encrypted=🔐
icon-unknown=🥷
icon-invalid=☠️

# Reverses the order of the message list.
# By default, the message list is ordered with the newest (highest UID) message on top. 
# useful when the backend does not support sorting.
# Default: false
reverse-msglist-order=true

# Reverse display of the mesage threads.
# Default order is the the intial message is on the top and replies below.
# Default: false
reverse-thread-order=false

# Enable a threaded view of messages.
# If this is not supported by the backend, threads will be built by the client.
# Default: false
threading-enabled=true

# Force client-side thread building
# Default: false
#force-client-threads=false

# Debounce client-side thread building
# Default: 50ms
#client-threads-delay=50ms

[statusline]

# Describes the format for the status line. See [ui].index-columns
# Default: left<*,center:=,right>*
status-columns=left<*,center:=,right>*

# Each name in status-columns must have a corresponding column-$name setting.
# Default:
#column-left=[{{.Account}}] {{.StatusInfo}}
#column-center={{.PendingKeys}}
#column-right={{.TrayInfo}}
column-left=[{{.Account}}] {{.StatusInfo}}
column-center={{.PendingKeys}}
column-right={{.TrayInfo}}

# String separator inserted between columns. See [ui].column-separator for more details.
# Default: " "
column-separator=" "

# Specifies the separator between grouped statusline elements.
# Default: " | "
separator=" | "

# Defines the mode for displaying the status elements.
# Options: text, icon
# Default: text
display-mode=icon

[viewer]

# Specifies the pager to use when displaying emails.
# NOTE: some filters may add ANSI codes to add color to rendered emails.
# Default: less -R
pager=less -R

# If an email offers several versions (multipart), you can configure which
# mimetype to prefer. 
# Default: text/plain,text/html
alternatives=text/html,text/plain

# Determine whether to show full headers or only parsed ones in message viewer.
# Default: false
show-headers=false

# Layout of headers when viewing a message.
# To display multiple headers in the same row, separate them with a pipe,
# Example:
#   "From|To" will be hidden if none of their specified headers are present in the message
# Default: From|To,Cc|Bcc,Date,Subject
header-layout=From|To,Cc|Bcc,Date,Subject

# Whether to always show the mimetype of an email, even when it is just a single part
# Default: false
always-show-mime=false

# Parses and extracts http links when viewing a message.
# Links can then be accessed with the open-link command.
# Default: true
parse-http-links=true

[compose]

# Specifies the command to run the editor with.
# Defaults to $EDITOR, or vi.
editor=nvim

# Default header fields to display when composing a message.
# To display multiple headers in the same row, separate them with a pipe, e.g. "To|From".
# Default: To|From,Subject
header-layout=To|From,Subject


[multipart-converters]
# Converters allow to generate multipart/alternative messages by converting the
# main text/plain part into any other MIME type.
# Only exact MIME types are accepted.
# The commands are invoked with sh -c and are expected to output valid UTF-8 text.
# Example:
#text/html=pandoc -f markdown -t html --standalone

[filters]
#
# Filters allow you to pipe an email body through a shell command to render
# certain emails differently, e.g. highlighting them with ANSI escape codes.
#
# The commands are invoked with sh -c. The following folders are appended to
# the system $PATH to allow referencing filters from their name only:
#
#   ${XDG_CONFIG_HOME:-~/.config}/aerc/filters
#   ${XDG_DATA_HOME:-~/.local/share}/aerc/filters
#   $PREFIX/share/aerc/filters
#   /usr/share/aerc/filters
#
# The following variables are defined in the filter command environment:
#
#   AERC_MIME_TYPE      the part MIME type/subtype
#   AERC_FORMAT         the part content type format= parameter
#   AERC_FILENAME       the attachment filename (if any)
#   AERC_SUBJECT        the message Subject header value
#   AERC_FROM           the message From header value
#
# The first filter which matches the email's mimetype will be used, so order
# them from most to least specific.
#
# You can also match on non-mimetypes, by prefixing with the header to match
# against (non-case-sensitive) and a comma, e.g. subject,text will match a
# subject which contains "text". Use header,~regex to match against a regex.
#
text/plain=colorize
text/calendar=calendar
message/delivery-status=colorize
message/rfc822=colorize
#text/html=pandoc -f html -t plain | colorize
#text/html=html | colorize
#text/*=bat -fP --file-name="$AERC_FILENAME"
#application/x-sh=bat -fP -l sh
#image/*=catimg -w $(tput cols) -
#subject,~Git(hub|lab)=lolcat -f
#from,thatguywhodoesnothardwraphismessages=wrap -w 100 | colorize

# This special filter is only used to post-process email headers when
# [viewer].show-headers=true
# By default, headers are piped directly into the pager.
#
.headers=colorize

[openers]
#
# Openers allow you to specify the command to use for the :open and :open-link
# actions on a per-MIME-type basis. The :open-link URL scheme is used to
# determine the MIME type as follows: x-scheme-handler/<scheme>.
#
# {} is expanded as the temporary filename to be opened. If it is not
# encountered in the command, the temporary filename will be appened to the end
# of the command.
#
# Like [filters], openers support basic shell globbing. The first opener which
# matches the part's MIME type (or URL scheme handler MIME type) will be used,
# so order them from most to least specific.
#
# Examples:
# x-scheme-handler/irc=hexchat
# x-scheme-handler/http*=firefox
# text/html=surf -dfgms
# text/plain=gvim {} +125
# message/rfc822=thunderbird

[hooks]
#
# Hooks are triggered whenever the associated event occurs.

#
# Executed when a new email arrives in the selected folder
#mail-received=notify-send "New mail from $AERC_FROM_NAME" "$AERC_SUBJECT"

#
# Executed when aerc starts
#aerc-startup=aerc :terminal calcurse && aerc :next-tab

#
# Executed when aerc shuts down.
#aerc-shutdown=

[templates]
# Templates are used to populate email bodies automatically.
#

# The directories where the templates are stored. It takes a colon-separated
# list of directories. If this is unset or if a template cannot be found, the
# following paths will be used as a fallback in that order:
#
#   ${XDG_CONFIG_HOME:-~/.config}/aerc/templates
#   ${XDG_DATA_HOME:-~/.local/share}/aerc/templates
#   /usr/local/share/aerc/templates
#   /usr/share/aerc/templates
#
#template-dirs=

# The default template to be used for new messages.
#
# default: new_message
#new-message=new_message

# The default template to be used for quoted replies.
#
# default: quoted_reply
#quoted-reply=quoted_reply

# The default template to be used for forward as body.
#
# default: forward_as_body
#forwards=forward_as_body
